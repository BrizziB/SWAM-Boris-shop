{
  "_args": [
    [
      {
        "raw": "rijs.resdir@https://registry.npmjs.org/rijs.resdir/-/rijs.resdir-0.2.1.tgz",
        "scope": null,
        "escapedName": "rijs.resdir",
        "name": "rijs.resdir",
        "rawSpec": "https://registry.npmjs.org/rijs.resdir/-/rijs.resdir-0.2.1.tgz",
        "spec": "https://registry.npmjs.org/rijs.resdir/-/rijs.resdir-0.2.1.tgz",
        "type": "remote"
      },
      "C:\\Users\\Boris\\Documents\\Unifi\\SWAM Boris-shop\\client\\Boris-shop\\node_modules\\rijs"
    ]
  ],
  "_from": "rijs.resdir@0.2.1",
  "_id": "rijs.resdir@0.2.1",
  "_inCache": true,
  "_location": "/rijs/rijs.resdir",
  "_phantomChildren": {},
  "_requested": {
    "raw": "rijs.resdir@https://registry.npmjs.org/rijs.resdir/-/rijs.resdir-0.2.1.tgz",
    "scope": null,
    "escapedName": "rijs.resdir",
    "name": "rijs.resdir",
    "rawSpec": "https://registry.npmjs.org/rijs.resdir/-/rijs.resdir-0.2.1.tgz",
    "spec": "https://registry.npmjs.org/rijs.resdir/-/rijs.resdir-0.2.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/rijs"
  ],
  "_resolved": "https://registry.npmjs.org/rijs.resdir/-/rijs.resdir-0.2.1.tgz",
  "_shasum": "835bced4c5de2bd313e3ad45c2a60f29655b45d1",
  "_shrinkwrap": null,
  "_spec": "rijs.resdir@https://registry.npmjs.org/rijs.resdir/-/rijs.resdir-0.2.1.tgz",
  "_where": "C:\\Users\\Boris\\Documents\\Unifi\\SWAM Boris-shop\\client\\Boris-shop\\node_modules\\rijs",
  "author": {
    "name": "Pedram Emrouznejad",
    "url": "https://github.com/pemrouz"
  },
  "browser": "./node_modules/utilise/identity.js",
  "bugs": {
    "url": "https://github.com/rijs/resdir/issues"
  },
  "dependencies": {
    "chokidar": "^1.0.5",
    "minimist": "^1.2.0",
    "utilise": "*"
  },
  "description": "[![Coverage Status](https://coveralls.io/repos/rijs/resdir/badge.svg?branch=master&service=github)](https://coveralls.io/github/rijs/resdir?branch=master)\r [![Build Status](https://travis-ci.org/rijs/resdir.svg)](https://travis-ci.org/rijs/resdir)",
  "devDependencies": {
    "babel-cli": "*",
    "babel-preset-es2015": "*",
    "browserify": "*",
    "chai": "*",
    "coveralls": "*",
    "istanbul": "*",
    "mocha": "*",
    "mocha-lcov-reporter": "*",
    "popper": "*",
    "rijs.core": "*",
    "rijs.css": "*",
    "rijs.fn": "*",
    "uglify-js": "*"
  },
  "homepage": "https://github.com/rijs/resdir#readme",
  "license": "pemrouz.mit-license.org",
  "main": "dist",
  "name": "rijs.resdir",
  "optionalDependencies": {},
  "readme": "# Ripple | Resources Directory\r\n[![Coverage Status](https://coveralls.io/repos/rijs/resdir/badge.svg?branch=master&service=github)](https://coveralls.io/github/rijs/resdir?branch=master)\r\n[![Build Status](https://travis-ci.org/rijs/resdir.svg)](https://travis-ci.org/rijs/resdir)\r\n\r\nLoads everything in your `./resources` directory on startup so you do not have to require and register each file manually. During development, this will watch for any changes in your resources folder and reregister it on change. So if you change a resource it will be synchronised with the client, then redrawn without any refreshes (hot reload). See [rijs/export](https://github.com/rijs/export#ripple--export) for similar if you are using Ripple without a server.\r\n\r\nStyles (CSS) will registered under the name matching their filename (with `.css`)\r\n\r\nComponents (JS) will registered under the name matching their filename (without `.js`)",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/rijs/resdir.git"
  },
  "scripts": {
    "babel": "babel src -d dist",
    "build": "npm run clean && npm run babel && npm run ignore",
    "clean": "rm -rf dist && mkdir dist",
    "cov": "npm run reset && istanbul cover ./node_modules/mocha/bin/_mocha -- -R spec",
    "coverage": "npm run reset && istanbul cover ./node_modules/mocha/bin/_mocha --report lcovonly -- -R spec && rm -rf ./coverage",
    "ignore": "find ./dist -type f -exec sed -i \"s/function _interopRequire/\\/* istanbul ignore next *\\/\\nfunction _interopRequire/g\" {} ;",
    "postversion": "git push && git push --tags",
    "reset": "sh -c \"echo '/* istanbul ignore next */' > ./resources/foo.js\" && sh -c \"echo 'module.exports = function foo(){ }' >> ./resources/foo.js\"",
    "test": "npm run reset && istanbul test ./node_modules/mocha/bin/_mocha --report html -- -R spec",
    "version": "npm run build && git add -A"
  },
  "version": "0.2.1"
}
